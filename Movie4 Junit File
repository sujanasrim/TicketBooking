package ticket;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

class Movie4 {

	private WebDriver driver;

	@BeforeEach
	void setUp() {
		driver = new ChromeDriver();

	}

	@Test
	void testBookButtonNotEnabled() {
		driver.get("http://localhost:3000/movie4");
         WebElement bookButton = driver.findElement(By.xpath("/html/body/div/div/div/div[2]/div/div[1]/button"));
		assertFalse(bookButton.isEnabled(), "Book Tickets button should NOT be enabled.");
	}

	@Test
	void testCorrectRedirectAfterBooking() {
		driver.get("http://localhost:3000/movie4");
		WebElement bookButton = driver.findElement(By.xpath("/html/body/div/div/div/div[2]/div/div[1]/button"));
		bookButton.click();
		  try {
	            Thread.sleep(200); 
	        } catch (InterruptedException e) {
	            e.printStackTrace();
	        }
		
		assertEquals("http://localhost:3000/Jazzshow", driver.getCurrentUrl(),"User should be redirected to the Jazzshow page.");
		driver.quit();
	}


	@Test
	void testButton() {
		driver.get("http://localhost:3000/movie4");
		WebElement bookButton = driver.findElement(By.xpath("/html/body/div/div/div/div[2]/div/div[1]/button"));
		bookButton.click();
		  try {
	            Thread.sleep(200); 
	        } catch (InterruptedException e) {
	            e.printStackTrace();
	        }
		
		assertEquals("http://localhost:3000/Jazzshow", driver.getCurrentUrl(),"User should be redirected to the Jazzshow page.");
		driver.quit();
	}

	@Test
	void testHeading() {
		driver.get("http://localhost:3000/movie4");
		WebElement heading = driver.findElement(By.tagName("h2"));
		String expectedHeading = "About the Movie";
		String actualHeading = heading.getText();
		assertEquals(expectedHeading, actualHeading, "The heading should match");
	}

	@Test
	void testParaContent() {
		driver.get("http://localhost:3000/movie4");

		WebElement paragraph = driver.findElement(By.xpath("/html/body/div/div/div/div[2]/div/div[2]/p[1]"));

		String expectedParagraph = "Deadpool's peaceful existence comes crashing down\r\n"
				+ "when the Time Variance Authority recruits him to help safeguard the multiverse.\r\n"
				+ "He soon unites with his would-be pal, Wolverine,\r\n"
				+ "to complete the mission and save his world from an existential threat.";

		String actualParagraph = paragraph.getText();
		assertEquals(expectedParagraph, actualParagraph, "The paragraph content should match");
	}

	@Test
	void testHeadingFail() {
		driver.get("http://localhost:3000/movie4");

		WebElement heading = driver.findElement(By.tagName("h2"));
		String expectedHeading = "Harpreet";
		String actualHeading = heading.getText();
		assertEquals(expectedHeading, actualHeading, "the heading does not match");
	}

	@Test
	void testparagraphcontentFail() {
		driver.get("http://localhost:3000/movie4");
		WebElement paragraph = driver.findElement(By.xpath("/html/body/div/div/div/div[2]/div/div[2]/p[1]"));
		String expectedParagraph = "Hello! how are you?";
		String actualParagraph = paragraph.getText();
		assertTrue(actualParagraph.contains(expectedParagraph), "The paragraph content does not match");
	}

	@Test
	void testBookButtonNotPresentFail() {
		driver.get("http://localhost:3000/movie4");
        WebElement bookButton = driver.findElement(By.xpath("/html/body/div/div/div/div[2]/div/div[1]/button"));
        assertFalse(bookButton.isDisplayed(), "The 'Book Tickets' button should not be present.");
	}

	@Test
	void testMoviePosterImageNotDisplayedFail() {
		driver.get("http://localhost:3000/movie4");
        WebElement moviePosterImg = driver.findElement(By.xpath("/html/body/div/div/div/div[2]/div/div[1]/img"));
        assertFalse(moviePosterImg.isDisplayed(), "The movie poster image should not be displayed.");
	}

	@Test
	void testNavigationFail() {
		driver.get("http://localhost:3000/movie4");
        WebElement bookButton = driver.findElement(By.xpath("/html/body/div/div/div/div[2]/div/div[1]/button"));
        bookButton.click();
        assertEquals("http://localhost:3000/IncorrectJazzshow", driver.getCurrentUrl(),"The URL after clicking 'Book Tickets' does not match the incorrect expectation.");
	}

	@Test
	void testBookButtonLabelFail() {
		driver.get("http://localhost:3000/movie4");
        WebElement bookButton = driver.findElement(By.xpath("//button[text()='Book Tickets']"));
		String expectedLabel = "Reserve Tickets"; 
		String actualLabel = bookButton.getText();
		assertEquals(expectedLabel, actualLabel, "The button label does not match the expected value.");
	}

	@Test
	void testFooterNotPresentFail() {
		driver.get("http://localhost:3000/movie4");
        boolean isFooterPresent = driver.findElements(By.tagName("footer")).isEmpty();
		assertFalse(isFooterPresent, "The footer should not be present."); 
	}

	@Test
	void testNavbarNotPresentFail() {
		driver.get("http://localhost:3000/movie4");
        boolean isNavbarPresent = driver.findElements(By.tagName("navbar")).isEmpty();
		assertFalse(isNavbarPresent, "The navbar should not be present."); 
	}

	@AfterEach
	void tearDown() {

		if (driver != null) {
			driver.quit();
		}
	}
}
